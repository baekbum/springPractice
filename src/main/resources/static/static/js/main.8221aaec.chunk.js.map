{"version":3,"sources":["action/Action.ts","action/ActionType.ts","utils/LoadData.ts","App.tsx","store/Problems.ts","store/Similars.ts","store/IsActive.ts","store/Store.ts","component/common/RenderItems.tsx","component/problems/Problems.tsx","component/similars/Similars.tsx","index.tsx"],"names":["saveProblems","IData","type","types","save_problems","data","updateProblems","update_problems","deleteProblems","delete_problems","saveSimilars","save_similars","updateSimilars","update_similars","showSimilars","IIndex","IObj","show_similars","index","obj","hideSimilars","hide_similars","problems","similars","isShow","loadData","dispatch","url","axios","get","then","result","actions","catch","err","console","log","App","memo","childProps","useDispatch","useState","childList","useEffect","LD","error","className","map","content","renderItem","initializeState","problemsReducer","state","action","AT","problemsObj","similarsReducer","similarsObj","initialize","similarsShow","isActiveReducer","reducers","combineReducers","store","createStore","RenderItems","children","fallback","ProblemItem","lazy","Problems","problemList","useSelector","items","setItems","observer","useRef","lastElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","setObserver","p","i","length","ref","id","render","SimilarItem","Similars","targetObj","isActive","similarList","setSimilarList","undefined","unitName","s","style","display","alignItems","Button","variant","disabled","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8221aaec.chunk.js","sourcesContent":["import * as types from \"./ActionType\";\r\nimport type * as AP from \"./types/ActionProps\";\r\n\r\nexport const saveProblems = (IData: AP.jsonData[]) => {\r\n  return { type: types.problems.save_problems, data: IData };\r\n};\r\n\r\nexport const updateProblems = (IData: AP.jsonData[]) => {\r\n  return { type: types.problems.update_problems, data: IData };\r\n};\r\n\r\nexport const deleteProblems = (IData: AP.jsonData[]) => {\r\n  return { type: types.problems.delete_problems, data: IData };\r\n};\r\n\r\nexport const saveSimilars = (IData: AP.jsonData[]) => {\r\n  return { type: types.similars.save_similars, data: IData };\r\n};\r\n\r\nexport const updateSimilars = (IData: AP.jsonData[]) => {\r\n  return { type: types.similars.update_similars, data: IData };\r\n};\r\n\r\nexport const showSimilars = (IIndex: number, IObj: AP.jsonData) => {\r\n  return { type: types.isShow.show_similars, index: IIndex, obj: IObj };\r\n};\r\n\r\nexport const hideSimilars = () => {\r\n  return { type: types.isShow.hide_similars };\r\n};\r\n","import type * as AP from \"./types/ActionProps\";\r\n\r\nexport const problems: AP.problemsType = {\r\n  save_problems: \"SAVE_PROBLEMS\",\r\n  update_problems: \"UPDATE_PROBLEMS\",\r\n  delete_problems: \"DELETE_PROBLEMS\",\r\n};\r\n\r\nexport const similars: AP.similarsType = {\r\n  save_similars: \"SAVE_SIMILARS\",\r\n  update_similars: \"UPDATE_SIMILARS\",\r\n};\r\n\r\nexport const isShow: AP.isShowType = {\r\n  show_similars: \"SHOW_SIMILARS\",\r\n  hide_similars: \"HIDE_SIMILARS\",\r\n};\r\n","import axios from \"axios\";\r\nimport * as actions from \"../action/Action\";\r\n\r\ntype loadDataProps = {\r\n  (dispatch: any, url: string, type: string): void;\r\n};\r\n\r\nexport const loadData: loadDataProps = (dispatch, url, type) => {\r\n  axios\r\n    .get(url)\r\n    .then((result) => {\r\n      if (type === \"PROBLEM\") {\r\n        dispatch(actions.saveProblems(result.data.data));\r\n      } else if (type === \"SIMILAR\") {\r\n        dispatch(actions.saveSimilars(result.data.data));\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { memo, useEffect } from 'react';\r\nimport { useState } from 'react';\r\n//import { useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n//import Problems from './component/problems/Problems';\r\n//import Similars from './component/similars/Similars';\r\nimport './css/App.scss';\r\nimport * as LD from './utils/LoadData'\r\n\r\ntype props = {\r\n  childProps?: JSX.Element[];\r\n};\r\n\r\nconst App = memo(({childProps}: props) => {\r\n  const dispatch = useDispatch();\r\n  const [childList] = useState<JSX.Element[] | undefined>(childProps);\r\n  const pUrl = 'http://localhost:8080/fe-problems.json';\r\n  const sUrl = 'http://localhost:8080/fe-similars.json';\r\n  // const itemList = useMemo<JSX.Element[]>(() => {\r\n  //   return [<Problems/>, <Similars/>];\r\n  // },[]);\r\n  const renderItem = (childList?: JSX.Element[]) => {\r\n    return (\r\n      childList &&\r\n        childList.map((content, index) => {\r\n          return (\r\n            <div className='item-container' key={index}>\r\n              {content}\r\n            </div>\r\n          )\r\n        })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      LD.loadData(dispatch, pUrl, 'PROBLEM');\r\n      LD.loadData(dispatch, sUrl, 'SIMILAR');  \r\n    } catch (error) {\r\n      console.log(error);\r\n    };    \r\n  },[dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='main-container'>\r\n        { renderItem(childList) }\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","import { Action } from \"redux\";\r\nimport * as AT from \"../action/ActionType\";\r\nimport * as AP from \"../action/types/ActionProps\";\r\n\r\nexport type state = {\r\n  problemsObj?: AP.jsonData[];\r\n};\r\n\r\ntype saveProblems = Action<\"SAVE_PROBLEMS\"> & {\r\n  data: AP.jsonData[];\r\n};\r\n\r\ntype updateProblems = Action<\"UPDATE_PROBLEMS\"> & {\r\n  data: AP.jsonData[];\r\n};\r\n\r\ntype deleteProblems = Action<\"DELETE_PROBLEMS\"> & {\r\n  data: AP.jsonData[];\r\n};\r\n\r\ntype action = saveProblems | updateProblems | deleteProblems;\r\n\r\nexport type reducer = {\r\n  (state: state, action: action): state;\r\n};\r\n\r\nconst initializeState = {};\r\n\r\nconst problemsReducer: reducer = (state = initializeState, action) => {\r\n  switch (action.type) {\r\n    case AT.problems.save_problems:\r\n      return { ...state, problemsObj: action.data };\r\n    case AT.problems.update_problems:\r\n      return { ...state, problemsObj: action.data };\r\n    case AT.problems.delete_problems:\r\n      return { ...state, problemsObj: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default problemsReducer;\r\n","import { Action } from \"redux\";\r\nimport * as AT from \"../action/ActionType\";\r\nimport * as AP from \"../action/types/ActionProps\";\r\n\r\nexport type state = {\r\n  similarsObj?: AP.jsonData[];\r\n};\r\n\r\ntype saveSimilars = Action<\"SAVE_SIMILARS\"> & {\r\n  data: AP.jsonData[];\r\n};\r\n\r\ntype updateSimilars = Action<\"UPDATE_SIMILARS\"> & {\r\n  data: AP.jsonData[];\r\n};\r\n\r\ntype deleteSimilars = Action<\"DELETE_SIMILARS\"> & {\r\n  data: AP.jsonData[];\r\n};\r\n\r\ntype action = saveSimilars | updateSimilars | deleteSimilars;\r\n\r\nexport type reducer = {\r\n  (state: state, action: action): state;\r\n};\r\n\r\nconst initializeState = {};\r\n\r\nconst similarsReducer: reducer = (state = initializeState, action) => {\r\n  switch (action.type) {\r\n    case AT.similars.save_similars:\r\n      return { ...state, similarsObj: action.data };\r\n    case AT.similars.update_similars:\r\n      return { ...state, similarsObj: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default similarsReducer;\r\n","import { Action } from \"redux\";\r\nimport * as AT from \"../action/ActionType\";\r\nimport * as AP from \"../action/types/ActionProps\";\r\n\r\nexport type state = {\r\n  similarsShow: boolean;\r\n  index?: number;\r\n  obj?: AP.jsonData;\r\n};\r\n\r\ntype showSimilars = Action<\"SHOW_SIMILARS\"> & {\r\n  index: number;\r\n  obj: AP.jsonData;\r\n};\r\n\r\ntype hideSimilars = Action<\"HIDE_SIMILARS\"> & {\r\n  index: number;\r\n  obj: AP.jsonData;\r\n};\r\n\r\ntype action = showSimilars | hideSimilars;\r\n\r\nexport type reducer = {\r\n  (state: state, action: action): state;\r\n};\r\n\r\nconst initialize = {\r\n  similarsShow: false,\r\n};\r\n\r\nconst isActiveReducer: reducer = (state = initialize, action) => {\r\n  switch (action.type) {\r\n    case AT.isShow.show_similars:\r\n      return {\r\n        ...state,\r\n        similarsShow: true,\r\n        index: action.index,\r\n        obj: action.obj,\r\n      };\r\n    case AT.isShow.hide_similars:\r\n      return { similarsShow: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isActiveReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport problemsReducer from \"./Problems\";\r\nimport similarsReducer from \"./Similars\";\r\nimport isActiveReducer from \"./IsActive\";\r\nimport type * as P from \"./Problems\";\r\nimport type * as S from \"./Similars\";\r\nimport type * as I from \"./IsActive\";\r\n\r\nexport type reducer = {\r\n  problemsReducer: P.state;\r\n  similarsReducer: S.state;\r\n  isActiveReducer: I.state;\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  problemsReducer,\r\n  similarsReducer,\r\n  isActiveReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React, { Suspense } from 'react';\r\n\r\ntype props = {\r\n    children?: JSX.Element[];\r\n};\r\n\r\nconst RenderItems = ({children}: props) => {\r\n    return (\r\n        <Suspense fallback={<div>...loading</div>}>\r\n            { children }\r\n        </Suspense>\r\n    );\r\n};\r\n\r\nexport default RenderItems;","import React, { lazy, memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../css/problems/Problems.scss';\r\nimport type * as AP from '../../action/types/ActionProps';\r\nimport type * as S from '../../store/Store';\r\nimport RenderItems from '../common/RenderItems';\r\n\r\ntype ASelector = AP.jsonData[] | undefined;\r\n\r\nconst ProblemItem = lazy(() => import('./ProblemItem'));\r\n\r\nconst setObserver = (observer: any, node: HTMLElement) => {\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n            console.log('보임!!');\r\n        }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n};\r\n\r\nconst Problems = memo(() => {\r\n    const problemList = useSelector<S.reducer, ASelector>(state => state?.problemsReducer?.problemsObj);\r\n    const [items, setItems] = useState<JSX.Element[]>();\r\n    const observer = useRef<any>();\r\n\r\n    const lastElementRef = useCallback((node) => {\r\n        setObserver(observer, node);    \r\n    }, []);\r\n\r\n    const render = (problemList: AP.jsonData[]) => {\r\n        return (\r\n            problemList.map((p, i) => {\r\n                const content = <ProblemItem index={i} obj={p} />;\r\n    \r\n                return (problemList.length === (i + 1)) ? (\r\n                    <div ref={lastElementRef} key={p.id}>{content}</div>\r\n                ) : (\r\n                    <div key={p.id}>{content}</div>\r\n                )\r\n            })\r\n        );\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (problemList) {\r\n            setItems(render(problemList));\r\n        }\r\n        // eslint-disable-next-line\r\n    },[problemList]);\r\n\r\n    return (\r\n        <div className='problems-container'>\r\n            <div className='header'>\r\n                <span className='title'>학습지 상세 편집</span>\r\n            </div>\r\n           <div className='content'>\r\n               <RenderItems children={items} />\r\n            </div>       \r\n        </div>        \r\n    );\r\n});\r\n\r\nexport default Problems;","import React, { lazy, memo, Suspense, useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../css/similars/Similars.scss';\r\nimport type * as AP from '../../action/types/ActionProps';\r\nimport type * as S from '../../store/Store';\r\n\r\ntype ASelector = AP.jsonData[] | undefined;\r\ntype OSelector = AP.jsonData | undefined;\r\n\r\nconst SimilarItem = lazy(() => import('./SimilarItem'));\r\n\r\nconst Similars = memo(() => {\r\n    const similarsObj = useSelector<S.reducer, ASelector>(state => state?.similarsReducer?.similarsObj);\r\n    const targetObj = useSelector<S.reducer, OSelector>(state => state?.isActiveReducer?.obj);\r\n    const isActive = useSelector<S.reducer, boolean>(state => state?.isActiveReducer?.similarsShow);\r\n    const [similarList, setSimilarList] = useState<AP.jsonData[]>([]);\r\n    \r\n    useEffect(() => {\r\n        if (similarsObj !== undefined) {\r\n            setSimilarList(similarsObj);            \r\n        }        \r\n    },[similarsObj]);\r\n\r\n    return (\r\n        <div className='similars-container'>\r\n            <div className='header'>\r\n                <span className='title'>문항 교체/추가</span>\r\n            </div>\r\n            <div className='content'>\r\n                { isActive ? (\r\n                    <>\r\n                        <div className='problem-unit-name'>\r\n                            <span>{ targetObj && targetObj.unitName }</span>\r\n                        </div>\r\n                        <Suspense fallback={<div>...loading</div>}>\r\n                            { similarList.map((s, i) => <SimilarItem key={s.id} index={i} obj={s}/>) }\r\n                        </Suspense>\r\n                    </>\r\n                ) : (\r\n                    <div className='disabled'>\r\n                        <div style={{display: 'flex', alignItems: 'center'}}>\r\n                            <Button variant=\"outline-primary\" className='similars-btn' disabled >유사문항</Button>\r\n                            <span className='disabled-span'>버튼을 누르면</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className='disabled-span'>해당 문제의 유사 문형을 볼 수 있습니다.</span>\r\n                        </div>\r\n                    </div>        \r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Similars;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.scss';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/Store';\r\nimport Problems from './component/problems/Problems';\r\nimport Similars from './component/similars/Similars';\r\n\r\nconst children = [<Problems />,<Similars />];\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App childProps={children}/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}